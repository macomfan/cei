cmake_minimum_required(VERSION 3.0)

PROJECT(cei_cpp)

IF (CMAKE_BUILD_TYPE MATCHES "Release")
  MESSAGE("Build Release version...")
  SET(CMAKE_BUILD_POSTFIX ${CMAKE_BUILD_TYPE})
ELSEIF(CMAKE_BUILD_TYPE MATCHES "Debug")
  MESSAGE("Build Debug version...")
  SET(CMAKE_BUILD_POSTFIX ${CMAKE_BUILD_TYPE})
ELSE()
  MESSAGE(FATAL_ERROR "The CMAKE_BUILD_TYPE only supports Release or Debug")
ENDIF()


set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/Debug)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/Debug)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/Debug)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/Release)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/Release)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/Release)

# IF (ENABLE_UT)
#     add_subdirectory(unittest)
# ENDIF ()


AUX_SOURCE_DIRECTORY(. DIR_SRCS)
AUX_SOURCE_DIRECTORY(./src DIR_SRCS)
AUX_SOURCE_DIRECTORY(./src/exchanges DIR_SRCS)
AUX_SOURCE_DIRECTORY(./src/impl DIR_SRCS)

include_directories(./include)
include_directories(./utils)
include_directories(/usr/local/include)

find_package(Boost 1.72)

add_definitions(-std=c++11)

ADD_EXECUTABLE(${PROJECT_NAME} ${DIR_SRCS})